1. 서로 호환되지 않는 단자를 어댑터로 호환시켜 작동할 수 있게 하는 아이디어
호환성이 없는 인터페이스 때문에 동작할 수 없는 클래스들을 작동하도록 변환

2. 어댑터 패턴 두 가지 방법
  - 상속(Inheritance)
  - 합성(Composition)

3. 패턴 사용 시기
  - 레거시 코드를 이용하고 싶은데 새로운 인터페이스가 레거시와 호환되지 않을 때
  - 이미 만든 것을 재사용하고 싶지만 해당 라이브러리를 수정할 수 없을 때
  - 소프트웨어의 구 버전과 신 버전을 공존시키고 싶을 때

4. 패턴 장점
  - 단일 책임 원칙(SRP)
  - 개방 폐쇄 원칙(OCP)
