1. 상태 패턴(State Pattern)은 객체가 특정 상태에 따라 행위를 달리하는 상황에서
상태를 객체화하여 상태가 행동을 할 수 있도록 위임하는 패턴

2. 객체 지향 프로그래밍에서의 클래스는 꼭 사물 / 생물만을 표현하는 고체 형태의 데이터만 표현할 수 있는게 아니다.
경우에 따라서 무형태의 행위 / 동작도 클래스로 묶어 표현할 수 있다.

3. 전략 패턴(Strategy Pattern)이 '전략 알고리즘'을 클래스로 표현한 패턴이라면, 상태 패턴은 '객체 상태'를
클래스로 표현한 패턴이라고 보면 된다.

4. Context : State를 이용하는 시스템. 시스템 상태를 나타내는 State 객체를 합성(composition)하여 가지고 있다.
클라이언트로부터 요청받으면 State 객체에 행위 실행을 위임한다.

5. 상태 패턴 사용 시기
  - 객체의 행동(메서드)가 상태(state)에 따라 각기 다른 동작을 할 때
  - 상태 및 전환에 걸쳐 대규모 조건 분기코드와 중복코드가 많을 경우
  - 조건문의 각 분기를 별도의 클래스에 넣는 것이 상태 패턴의 핵심
  - 런타임단에서 객체의 상태를 유동적으로 변경해야 할 때

6. 상태 패턴의 핵심은 '상태'를 객체화 하라는 것이다. (객체를 지향하라)

7. 각 상태들은 싱글톤화
