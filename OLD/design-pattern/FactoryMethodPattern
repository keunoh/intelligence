1. 팩토리 메소드 패턴은 객체 생성을 공장(Factory) 클래스로 캡슐화 처리하여 대신 생성하게 하는 생성 디자인 패턴이다.

2. Creator : 최상위 공장 클래스
  - 객체 생성 처리 메서드(someOperation) : 객체 생성에 관한 전, 후처리를 템플릿화한 메서드
  - 팩토리 메서드(createProduct) : 서브 공장 클래스에서 재정의할 객체 생성 추상 메서드

3. 객체는 사람 / 사물과 같은 유형의 형태, 전략 / 상태와 같은 무형의 형태가 될 수도 있고
  공장과 같은 중간 생성자 역할도 할 수 있다.

4. 패턴 사용 시기
  - 클래스 생성과 사용처리 분리, 결합도를 낮출 떄
  - 구성 요소 확장 방법 제공하는 경우 -> 라이브러리 사용자에게
  - 기존 객체를 재구성 대신 재사용하기 위함
    - 객체를 생성하는 코드는 자주 중복됨
    - 생성 코드를 분리

5. 패턴 장점
  - 생성자와 구현 객체 강한 결합 감소
  - 객체 생성 후 공통으로 할 일 수행 가능
  - 단일 책임 준수 : 객체 생성을 한 곳에서 관리
  - 개방/폐쇄 준수 : 기존 코드 수정하지 않고 확장 가능
