# 📁 파일 시스템 구조와 HDD 물리적 구조의 연계

## ✅ 개요
이 문서는 운영체제(OS)의 파일 시스템 구조(소프트웨어적 요소)와 하드디스크 드라이브(HDD)의 물리적 저장 구조(하드웨어적 요소)를 정리하고, 이 둘이 어떻게 연계되어 작동하는지를 설명한다.

---

## 🧠 1. 파일 시스템 구조 (소프트웨어 측면)

### 📂 구성 요소
| 구성 요소 | 설명 |
|-----------|------|
| **메타데이터** | 파일 이름, 생성 시간, 권한, 크기 등 |
| **인덱스 테이블** | 실제 데이터가 저장된 위치(클러스터 번호 등)를 저장하는 구조체 (ex. inode, MFT) |
| **데이터 영역** | 실제 파일 내용이 저장되는 영역 |

### 📁 파일 시스템 예시
- **ext4 (Linux)**: inode 테이블을 사용
- **NTFS (Windows)**: MFT (Master File Table)를 사용

### 📌 동작 흐름 (파일 읽기)
1. **Superblock**을 통해 파일 시스템 메타정보 로딩
2. **인덱스 테이블(inode/MFT)**에서 파일 위치 파악
3. 해당 **클러스터**를 찾아 실제 데이터 읽기

### 📂 파일 시스템 구조 (예시 트리)
```
📂 파일 시스템 구조 (File System Structure)
├── 🟢 Superblock → 파일 시스템의 전체 정보 보유
│   ├── 파일 시스템 크기, inode 수, 블록 크기 등
│
├── 🔵 인덱스 테이블 (inode table / MFT)
│   ├── 각 파일의 메타데이터 (크기, 권한, 위치 등)
│   ├── 각 파일이 사용하는 데이터 블록 번호 리스트 포함
│
├── 🟠 디렉토리 엔트리
│   ├── 파일 이름과 inode 번호를 매핑
│
├── 🔴 데이터 블록 영역 (클러스터)
    ├── 실제 파일의 내용 저장
    ├── 클러스터 단위로 관리됨
```

---

## 💽 2. HDD의 물리적 구조 (하드웨어 측면)

### 🧲 구성 요소
| 구성 요소 | 설명 |
|-----------|------|
| **플래터 (Platter)** | 데이터를 저장하는 자기 디스크 |
| **헤드 (Head)** | 플래터의 자기장 패턴을 읽고 씀 |
| **트랙/섹터/클러스터** | 데이터를 구분하는 물리적 단위 |

### 🧱 저장 단위
- **섹터 (Sector)**: 가장 작은 단위 (512B 또는 4KB)
- **클러스터 (Cluster)**: 여러 섹터를 묶은 논리적 저장 단위 (ex. 4KB, 8KB)

### 📂 HDD 구조 (예시 트리)
```
📂 HDD 구조 (Hard Disk Drive Structure)
├── 🟢 플래터 (Platter) → 자성 물질로 된 회전 디스크
│   ├── 다수의 트랙(원형 경로)으로 구성
│
├── 🔵 트랙 (Track)
│   ├── 동심원 형태로 플래터에 위치함
│
├── 🟠 섹터 (Sector)
│   ├── 트랙을 나눈 물리적 최소 단위 (512B~4KB)
│
├── 🔴 클러스터 (Cluster)
│   ├── 섹터 여러 개를 묶은 논리적 단위 (파일 시스템이 다룸)
│
├── ⚙️ 헤드 (Head)
    ├── 트랙과 섹터를 따라 이동하며 자기장 판독/기록 수행
```

---

## 🔄 3. 소프트웨어와 하드웨어의 연계 동작

### 📌 파일 저장/읽기 흐름
1. 사용자가 파일을 생성 요청
2. OS가 빈 inode/MFT를 확인 (없으면 오류 발생)
3. 연속된 클러스터가 있는지 확인
4. 디스크의 클러스터에 데이터 쓰기 요청 → HDD가 물리적으로 기록
5. OS가 인덱스 테이블에 클러스터 번호 저장
6. 파일 열기 시, OS는 인덱스를 통해 클러스터 위치 파악 후 데이터 읽기 요청

### 📌 조각 모음(Defragmentation)
- 조각난 파일을 연속된 클러스터로 재배치
- HDD는 복사된 데이터만 처리하고, 판단은 OS가 수행함

---

## 🧠 4. HDD는 공학 기술의 총합체

HDD는 단순한 저장 장치가 아니다. 다양한 분야의 공학 기술이 결합된 복합체다.

| 기술 분야 | 기여 내용 |
|------------|------------|
| **자기공학** | 플래터 표면의 자화 상태를 통해 0과 1 저장 |
| **기계공학** | 수천 RPM으로 회전하는 정밀 플래터와 부상하는 헤드 설계 |
| **전기전자공학** | 헤드의 위치 제어, 신호 증폭, 센싱 |
| **재료공학** | 고밀도 자성 재료 개발, 내구성 높은 디스크 소재 |
| **컴퓨터공학/소프트웨어** | 운영체제와 파일 시스템 설계, 캐싱, 오류 복구 처리 |

> 📌 HDD는 이 모든 기술이 유기적으로 결합되어 작동하는, 물리와 논리의 완벽한 조합체다.

---

## ❗ 중요 개념 요약

| 구분 | 설명 |
|------|------|
| OS의 역할 | 인덱스 관리, 파일 시스템 관리, 오류 감지, 디스크 제어 요청 |
| HDD의 역할 | 단순 읽기/쓰기만 수행, 판단 X |
| 인덱스 오버플로우 | inode 또는 MFT가 가득 차면 OS가 오류 발생시킴 (HDD는 모름) |
| 저장 단위 | 파일, 인덱스, 메타데이터 모두 클러스터 단위로 디스크에 저장됨 |

---

## 🧠 비유적으로 이해하기
- **OS = 뇌**
- **HDD = 기억을 저장하는 서랍장**
- OS는 서랍의 구조를 기억하고, 적절한 서랍을 열고 닫는 지능체계 역할을 한다.

---

이 정리는 하드웨어와 소프트웨어가 어떻게 유기적으로 작동하는지를 이해하는 데 큰 도움이 된다. 운영체제를 공부할 때 반드시 이해하고 넘어가야 하는 핵심 개념들이다.

